theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "sd")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "sd")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 3, style = "sd")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 3, style = "sd")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 3, style = "quantile")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 3, style = "quantile")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 3, style = "kmeans")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 3, style = "kmeans")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_viridis_d(alpha = 0.9) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "fisher")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "fisher")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "fixed")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "sd")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "sd")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("Simulated all crime","Simulated crime known to police"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(oa_compare_map$all_crimes, n = 4, style = "equal")
known_brks      <-  classIntervals(oa_compare_map$known, n = 4, style = "equal")
oa_compare_map_sf <- oa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(oa_compare_map_sf$all_crimes_cut)
# Map function.
oa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
# temp <- ggplot(data = x) +
#   geom_sf(aes(fill = known_cut)) +
#   scale_fill_viridis_d(alpha = 0.9) +
#   labs(fill = "") +
#   theme(legend.position = "bottom") #+
# guides(fill = guide_colorbar(barwidth=20, barheight = 1)) + labs(fill = NULL)
# leg <- get_legend(temp)
# plot_maps <-   plot_grid(p1, p2, labels = c("Simulated all crime","Simulated crime known to police"),
#                          scale = 0.9, label_fontface = "plain")
# plot_grid(plot_maps, leg, nrow = 2, rel_heights = c(10,1))
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save OA.
temp <- oa_map_fun(oa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_oa.png", height = 24, width = 24, unit = "cm")
# MSOA ===
# Create breaks, filter for all crimes and make spatial again.
msoa_compare_map <- msoa_compare_df %>%
filter(crime_type == "theft")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(oa_compare_map$all_crimes, n = 8, style = "equal")
known_brks      <-  classIntervals(oa_compare_map$known, n = 8, style = "equal")
oa_compare_map_sf <- oa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(oa_compare_map_sf$all_crimes_cut)
# Map function.
oa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
# temp <- ggplot(data = x) +
#   geom_sf(aes(fill = known_cut)) +
#   scale_fill_viridis_d(alpha = 0.9) +
#   labs(fill = "") +
#   theme(legend.position = "bottom") #+
# guides(fill = guide_colorbar(barwidth=20, barheight = 1)) + labs(fill = NULL)
# leg <- get_legend(temp)
# plot_maps <-   plot_grid(p1, p2, labels = c("Simulated all crime","Simulated crime known to police"),
#                          scale = 0.9, label_fontface = "plain")
# plot_grid(plot_maps, leg, nrow = 2, rel_heights = c(10,1))
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save OA.
temp <- oa_map_fun(oa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_oa.png", height = 24, width = 24, unit = "cm")
# MSOA ===
# Create breaks, filter for all crimes and make spatial again.
msoa_compare_map <- msoa_compare_df %>%
filter(crime_type == "theft")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 8, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 8, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(oa_compare_map$all_crimes, n = 5, style = "equal")
known_brks      <-  classIntervals(oa_compare_map$known, n = 5, style = "equal")
oa_compare_map_sf <- oa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(oa_compare_map_sf$all_crimes_cut)
# Map function.
oa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
# temp <- ggplot(data = x) +
#   geom_sf(aes(fill = known_cut)) +
#   scale_fill_viridis_d(alpha = 0.9) +
#   labs(fill = "") +
#   theme(legend.position = "bottom") #+
# guides(fill = guide_colorbar(barwidth=20, barheight = 1)) + labs(fill = NULL)
# leg <- get_legend(temp)
# plot_maps <-   plot_grid(p1, p2, labels = c("Simulated all crime","Simulated crime known to police"),
#                          scale = 0.9, label_fontface = "plain")
# plot_grid(plot_maps, leg, nrow = 2, rel_heights = c(10,1))
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save OA.
temp <- oa_map_fun(oa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_oa.png", height = 24, width = 24, unit = "cm")
# MSOA ===
# Create breaks, filter for all crimes and make spatial again.
msoa_compare_map <- msoa_compare_df %>%
filter(crime_type == "theft")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 5, style = "equal")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 5, style = "equal")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
all_crimes_brks <-  classIntervals(oa_compare_map$all_crimes, n = 4, style = "quantile")
known_brks      <-  classIntervals(oa_compare_map$known, n = 4, style = "quantile")
oa_compare_map_sf <- oa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(oa_compare_map_sf$all_crimes_cut)
# Map function.
oa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
# temp <- ggplot(data = x) +
#   geom_sf(aes(fill = known_cut)) +
#   scale_fill_viridis_d(alpha = 0.9) +
#   labs(fill = "") +
#   theme(legend.position = "bottom") #+
# guides(fill = guide_colorbar(barwidth=20, barheight = 1)) + labs(fill = NULL)
# leg <- get_legend(temp)
# plot_maps <-   plot_grid(p1, p2, labels = c("Simulated all crime","Simulated crime known to police"),
#                          scale = 0.9, label_fontface = "plain")
# plot_grid(plot_maps, leg, nrow = 2, rel_heights = c(10,1))
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save OA.
temp <- oa_map_fun(oa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_oa.png", height = 24, width = 24, unit = "cm")
# MSOA ===
# Create breaks, filter for all crimes and make spatial again.
msoa_compare_map <- msoa_compare_df %>%
filter(crime_type == "theft")
all_crimes_brks <-  classIntervals(msoa_compare_map$all_crimes, n = 4, style = "quantile")
known_brks      <-  classIntervals(msoa_compare_map$known, n = 4, style = "quantile")
msoa_compare_map_sf <- msoa_compare_map %>%
filter(crime_type == "theft") %>%
st_as_sf(sf_column_name = "geometry") %>%
mutate(all_crimes_cut = cut(all_crimes, all_crimes_brks$brks, include.lowest = T, dig.lab = 5),
known_cut      = cut(known     , known_brks$brks     , include.lowest = T, dig.lab = 5))
table(msoa_compare_map_sf$all_crimes_cut)
# Map function.
msoa_map_fun <- function(x){
p1 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = all_crimes_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
p2 <- ggplot(data = x) +
geom_sf(mapping = aes(fill = known_cut), colour = "transparent") +
theme_minimal() +
scale_fill_grey(start=0.8, end=0.2) +
labs(fill = "") +
theme(legend.position = "bottom")
plot_grid(p1, p2, nrow = 1, labels = c("All crime (synthetic data)","Known to police (synthetic data)"))
}
# Plot and save MSOA.
temp <- msoa_map_fun(msoa_compare_map_sf)
ggsave(plot = temp, filename = "visuals/map_comaprison_msoa.png", height = 24, width = 24, unit = "cm")
