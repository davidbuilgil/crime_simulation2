ungroup() %>%
rename(all_crimes = n) %>%
left_join(vehicle_WD_know) %>%
mutate(unit = "WD") %>%
select(-WD)
# Count number of residence crimes known to police for each WD.
residence_WD_know <- Data_crimes %>%
filter(residence == 1) %>%
group_by(WD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of residence crimes per WD, merge with known to police.
residence_WD <- Data_crimes %>%
filter(residence == 1) %>%
group_by(WD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(residence_WD_know) %>%
mutate(unit = "WD") %>%
select(-WD)
# Count number of thefts known to police for each WD.
theft_WD_know <- Data_crimes %>%
filter(theft == 1) %>%
group_by(WD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of thefts per WD, merge with known to police.
theft_WD <- Data_crimes %>%
filter(theft == 1) %>%
group_by(WD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(theft_WD_know) %>%
mutate(unit = "WD") %>%
select(-WD)
# Count number of violent crimes known to police for each WD.
violent_WD_know <- Data_crimes %>%
filter(violence == 1) %>%
group_by(WD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of violent crimes per WD, merge with known to police.
violent_WD <- Data_crimes %>%
filter(violence == 1) %>%
group_by(WD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(violent_WD_know) %>%
mutate(unit = "WD") %>%
select(-WD)
# LAD.
# Count number of crimes known to police for each LAD.
crimes_LAD_know <- Data_crimes %>%
group_by(LAD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of crimes per LAD, merge with known to police.
crimes_LAD <- Data_crimes %>%
group_by(LAD) %>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(crimes_LAD_know) %>%
mutate(unit = "LAD") %>%
select(-LAD)
# Count number of vehicle crimes known to police for each LAD.
vehicle_LAD_know <- Data_crimes %>%
filter(vehicle == 1) %>%
group_by(LAD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of vehicle crimes per LAD, merge with known to police.
vehicle_LAD <- Data_crimes %>%
filter(vehicle == 1) %>%
group_by(LAD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(vehicle_LAD_know) %>%
mutate(unit = "LAD") %>%
select(-LAD)
# Count number of residence crimes known to police for each LAD.
residence_LAD_know <- Data_crimes %>%
filter(residence == 1) %>%
group_by(LAD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of residence crimes per LAD, merge with known to police.
residence_LAD <- Data_crimes %>%
filter(residence == 1) %>%
group_by(LAD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(residence_LAD_know) %>%
mutate(unit = "LAD") %>%
select(-LAD)
# Count number of thefts known to police for each LAD.
theft_LAD_know <- Data_crimes %>%
filter(theft == 1) %>%
group_by(LAD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of thefts per LAD, merge with known to police.
theft_LAD <- Data_crimes %>%
filter(theft == 1) %>%
group_by(LAD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(theft_LAD_know) %>%
mutate(unit = "LAD") %>%
select(-LAD)
# Count number of violent crimes known to police for each LAD.
violent_LAD_know <- Data_crimes %>%
filter(violence == 1) %>%
group_by(LAD) %>%
summarise(known = sum(copsknow)) %>%
ungroup()
# Count number of violent crimes per LAD, merge with known to police.
violent_LAD <- Data_crimes %>%
filter(violence == 1) %>%
group_by(LAD)%>%
tally() %>%
ungroup() %>%
rename(all_crimes = n) %>%
left_join(violent_LAD_know) %>%
mutate(unit = "LAD") %>%
select(-LAD)
# Bind together so descriptives easily generated (omit crimes_LAD as only 1 observation).
crimes_units <- bind_rows(crimes_OA, crimes_LSOA, crimes_MSOA, crimes_WD)
vehicle_units <- bind_rows(vehicle_OA, vehicle_LSOA, vehicle_MSOA, vehicle_WD)
residence_units <- bind_rows(residence_OA, residence_LSOA, residence_MSOA, residence_WD)
theft_units <- bind_rows(theft_OA, theft_LSOA, theft_MSOA, theft_WD)
violent_units <- bind_rows(violent_OA, violent_LSOA, violent_MSOA, violent_WD)
# Calculate RD% by crime type.
crimes_units_stats <- crimes_units %>%
mutate(RD     = ((known - all_crimes) / all_crimes) * 100,
abs_RD = abs(RD))
vehicle_units_stats <- vehicle_units %>%
mutate(RD     = ((known - all_crimes) / all_crimes) * 100,
abs_RD = abs(RD))
residence_units_stats <- residence_units %>%
mutate(RD     = ((known - all_crimes) / all_crimes) * 100,
abs_RD = abs(RD))
theft_units_stats <- theft_units %>%
mutate(RD     = ((known - all_crimes) / all_crimes) * 100,
abs_RD = abs(RD))
violent_units_stats <- violent_units %>%
mutate(RD     = ((known - all_crimes) / all_crimes) * 100,
abs_RD = abs(RD))
# Re-prder factor for visualisation.
crimes_units_stats$unit <- factor(crimes_units_stats$unit, levels = c("OA", "LSOA", "MSOA", "WD"))
vehicle_units_stats$unit <- factor(vehicle_units_stats$unit, levels = c("OA", "LSOA", "MSOA", "WD"))
residence_units_stats$unit <- factor(residence_units_stats$unit, levels = c("OA", "LSOA", "MSOA", "WD"))
theft_units_stats$unit <- factor(theft_units_stats$unit, levels = c("OA", "LSOA", "MSOA", "WD"))
violent_units_stats$unit <- factor(violent_units_stats$unit, levels = c("OA", "LSOA", "MSOA", "WD"))
# Print descriptives.
crimes_units_stats %>%
group_by(unit) %>%
summarise(mean_RD    = mean(RD),
min_RD     = min(RD),
max_RD     = max(RD),
var_RD     = var(RD),
sd_RD      = sd(RD),
med_abs_RD = median(abs_RD))
vehicle_units_stats %>%
group_by(unit) %>%
summarise(mean_RD    = mean(RD),
min_RD     = min(RD),
max_RD     = max(RD),
var_RD     = var(RD),
sd_RD      = sd(RD),
med_abs_RD = median(abs_RD))
residence_units_stats %>%
group_by(unit) %>%
summarise(mean_RD    = mean(RD),
min_RD     = min(RD),
max_RD     = max(RD),
var_RD     = var(RD),
sd_RD      = sd(RD),
med_abs_RD = median(abs_RD))
theft_units_stats %>%
group_by(unit) %>%
summarise(mean_RD    = mean(RD),
min_RD     = min(RD),
max_RD     = max(RD),
var_RD     = var(RD),
sd_RD      = sd(RD),
med_abs_RD = median(abs_RD))
violent_units_stats %>%
group_by(unit) %>%
summarise(mean_RD    = mean(RD),
min_RD     = min(RD),
max_RD     = max(RD),
var_RD     = var(RD),
sd_RD      = sd(RD),
med_abs_RD = median(abs_RD))
# Visualise distribution of abs_RD at each spatial scale (boxplot).
p1 <- ggplot(data = crimes_units_stats) +
theme_bw() +
geom_boxplot(mapping = aes(x = unit,  y = abs_RD, fill = unit), colour = "black") +
labs(title = "RD% between all crimes and crimes known to police",
y = "RD", x = "") +
scale_fill_viridis_d(alpha = 0.7) +
theme(plot.title = element_text(size = 10),
legend.position = "none")
p1
# Save visualisations.
ggsave(plot = p1, filename = "visuals/RD_boxplot.png", width = 15, height = 12, unit = "cm")
# Calculate ARB.
crimes_units_ARB <- crimes_units %>%
mutate(RB  = ((all_crimes / known)-1),
ARB = abs(RB))
# Print ARB.
crimes_units_ARB %>%
group_by(unit) %>%
summarise(mean_ARB    = mean(ARB),
min_ARB     = min(ARB),
max_ARB     = max(ARB),
var_ARB     = var(ARB),
sd_ARB      = sd(ARB))
# Load crimes known to Greater Manchester Police in 2011/12
GMP_all <- read.csv(here("data/GMP_all.csv"))
if (exists("GMP_all")){
print("You have downloaded the dataset of crimes recorded by GMP from Github. We have just saved 3 hours of your life")
} else {
# Load crimes known to Greater Manchester Police in 2011/12
GMP_Apr11 <- read.csv(here("data/GMP_crimes", "2011-04-greater-manchester-street.csv"))
GMP_May11 <- read.csv(here("data/GMP_crimes", "2011-05-greater-manchester-street.csv"))
GMP_Jun11 <- read.csv(here("data/GMP_crimes", "2011-06-greater-manchester-street.csv"))
GMP_Jul11 <- read.csv(here("data/GMP_crimes", "2011-07-greater-manchester-street.csv"))
GMP_Aug11 <- read.csv(here("data/GMP_crimes", "2011-08-greater-manchester-street.csv"))
GMP_Sep11 <- read.csv(here("data/GMP_crimes", "2011-09-greater-manchester-street.csv"))
GMP_Oct11 <- read.csv(here("data/GMP_crimes", "2011-10-greater-manchester-street.csv"))
GMP_Nov11 <- read.csv(here("data/GMP_crimes", "2011-11-greater-manchester-street.csv"))
GMP_Dec11 <- read.csv(here("data/GMP_crimes", "2011-12-greater-manchester-street.csv"))
GMP_Jan12 <- read.csv(here("data/GMP_crimes", "2012-01-greater-manchester-street.csv"))
GMP_Feb12 <- read.csv(here("data/GMP_crimes", "2012-02-greater-manchester-street.csv"))
GMP_Marc12 <- read.csv(here("data/GMP_crimes", "2012-03-greater-manchester-street.csv"))
# Merge all crimes known to police in 2011/12
GMP_all <- do.call("rbind",
list(GMP_Apr11, GMP_May11, GMP_Jun11, GMP_Jul11, GMP_Aug11,
GMP_Sep11, GMP_Oct11, GMP_Nov11, GMP_Dec11, GMP_Jan12,
GMP_Feb12, GMP_Marc12))
# Remove original crime datasets
rm("GMP_Apr11", "GMP_May11", "GMP_Jun11", "GMP_Jul11", "GMP_Aug11",
"GMP_Sep11", "GMP_Oct11", "GMP_Nov11", "GMP_Dec11", "GMP_Jan12",
"GMP_Feb12", "GMP_Marc12")
# Create new column with number 1 for all crimes
GMP_all$num <- 1
# Select only those in Manchester LAD
GMP_all <- subset(GMP_all, LSOA.code %in% LSOA_to_ward$LSOA)
# Install and load PostcodesioR to geocode GMP data
#devtools::install_github("ropensci/PostcodesioR")
library(PostcodesioR)
# Create matrix
GMP_postcodes <- matrix(NA, ncol = 1, nrow = nrow(GMP_all))
# Convert coordinates into postcodes
for (row in 1:nrow(GMP_all)) {
print(row)
GMP_postcodes[row] <- reverse_geocoding(GMP_all$Longitude[row], GMP_all$Latitude[row], limit = 1)
}
# Select only data about postcodes
GMP_postcodes2 <- lapply(GMP_postcodes, function(x) x[[1]])
# Modify NULLs by NAs
GMP_postcodes2 <- replace(GMP_postcodes2, GMP_postcodes2=="NULL", NA)
# Unlist postcodes
GMP_postcodes3 <- as.data.frame(unlist(GMP_postcodes2))
# Rename the column before merging it into GMP dataset
colnames(GMP_postcodes3) <- "postcode"
# Merging postcodes into GMP data
GMP_all$postcode <- GMP_postcodes3$postcode
# Load vlookup of postcodes into output areas
postcodes_vlookup <- read.csv("https://opendata.arcgis.com/datasets/80628f9289574ba4b39a76ca7830b7e9_0.csv")
# Rename first column
colnames(postcodes_vlookup)[1] <- "postcode"
# Delete spaces from two datasets to enable vlookup
postcodes_vlookup$postcode <- gsub('\\s+', '', postcodes_vlookup$postcode)
GMP_all$postcode <- gsub('\\s+', '', GMP_all$postcode)
# Join vlookup with GMP crimes
GMP_all <- left_join(GMP_all, postcodes_vlookup, by = "postcode")
# write dataset of crimes known to police
write_csv(x = GMP_all, path = here("data","GMP_all.csv"))
}
# Delete all GMP crimes not recorded in Manchester.
GMP_all <- GMP_all %>% filter(ladnm == "Manchester")
# Recode categories to those used in the simulation.
GMP_all <- GMP_all %>%
mutate(Crime.type=recode(Crime.type,
"Anti-social behaviour"       = "other",
"Burglary"                    = "residence",
"Criminal damage and arson"   = "residence",
"Drugs"                       = "other",
"Other crime"                 = "other",
"Other theft"                 = "theft",
"Public disorder and weapons" = "other",
"Robbery"                     = "theft",
"Shoplifting"                 = "other",
"Vehicle crime"               = "vehicle",
"Violent crime"               = "violent"))
# Count crimes per Output Area (all crimes)
GMP_all_oa <- GMP_all %>%
group_by(oa11) %>%
rename(OA = oa11) %>%
summarise(GMP = sum(num))
# Count vehicle crimes per Output Area
GMP_vehicle_oa <- GMP_all %>%
filter(Crime.type == "vehicle") %>%
group_by(oa11) %>%
rename(OA = oa11) %>%
summarise(GMP = sum(num))
# Count residence crimes per Output Area
GMP_residence_oa <- GMP_all %>%
filter(Crime.type == "residence") %>%
group_by(oa11) %>%
rename(OA = oa11) %>%
summarise(GMP = sum(num))
# Count property crimes per Output Area
GMP_theft_oa <- GMP_all %>%
filter(Crime.type == "theft") %>%
group_by(oa11) %>%
rename(OA = oa11) %>%
summarise(GMP = sum(num))
# Count violent crimes per Output Area
GMP_violent_oa <- GMP_all %>%
filter(Crime.type == "violent") %>%
group_by(oa11) %>%
rename(OA = oa11) %>%
summarise(GMP = sum(num))
# Count crimes per LSOA (all crimes)
GMP_all_lsoa <- GMP_all %>%
group_by(lsoa11cd) %>%
rename(LSOA = lsoa11cd) %>%
summarise(GMP = sum(num))
# Count vehicle crimes per LSOA
GMP_vehicle_lsoa <- GMP_all %>%
filter(Crime.type == "vehicle") %>%
group_by(lsoa11cd) %>%
rename(LSOA = lsoa11cd) %>%
summarise(GMP = sum(num))
# Count residence crimes per LSOA
GMP_residence_lsoa <- GMP_all %>%
filter(Crime.type == "residence") %>%
group_by(lsoa11cd) %>%
rename(LSOA = lsoa11cd) %>%
summarise(GMP = sum(num))
# Count property crimes per LSOA
GMP_theft_lsoa <- GMP_all %>%
filter(Crime.type == "theft") %>%
group_by(lsoa11cd) %>%
rename(LSOA = lsoa11cd) %>%
summarise(GMP = sum(num))
# Count violent crimes per LSOA
GMP_violent_lsoa <- GMP_all %>%
filter(Crime.type == "violent") %>%
group_by(lsoa11cd) %>%
rename(LSOA = lsoa11cd) %>%
summarise(GMP = sum(num))
# Count crimes per MSOA (all crimes)
GMP_all_msoa <- GMP_all %>%
group_by(msoa11cd) %>%
rename(MSOA = msoa11cd) %>%
summarise(GMP = sum(num))
# Count vehicle crimes per MSOA
GMP_vehicle_msoa <- GMP_all %>%
filter(Crime.type == "vehicle") %>%
group_by(msoa11cd) %>%
rename(MSOA = msoa11cd) %>%
summarise(GMP = sum(num))
# Count residence crimes per MSOA
GMP_residence_msoa <- GMP_all %>%
filter(Crime.type == "residence") %>%
group_by(msoa11cd) %>%
rename(MSOA = msoa11cd) %>%
summarise(GMP = sum(num))
# Count property crimes per MSOA
GMP_theft_msoa <- GMP_all %>%
filter(Crime.type == "theft") %>%
group_by(msoa11cd) %>%
rename(MSOA = msoa11cd) %>%
summarise(GMP = sum(num))
# Count violent crimes per MSOA
GMP_violent_msoa <- GMP_all %>%
filter(Crime.type == "violent") %>%
group_by(msoa11cd) %>%
rename(MSOA = msoa11cd) %>%
summarise(GMP = sum(num))
# Rename first column of spatial vlookup.
colnames(LSOA_to_ward)[1] <- "LSOA.code"
# Merge all GMP records with spatial vlookup.
GMP_all <- left_join(GMP_all, LSOA_to_ward, by = "LSOA.code")
# Count crimes per ward (all crimes)
GMP_all_ward <- GMP_all %>%
group_by(WD18CD) %>%
rename(WD = WD18CD) %>%
summarise(GMP = sum(num))
# Count vehicle crimes per WD
GMP_vehicle_ward <- GMP_all %>%
filter(Crime.type == "vehicle") %>%
group_by(WD18CD) %>%
rename(WD = WD18CD) %>%
summarise(GMP = sum(num))
# Count residence crimes per WD
GMP_residence_ward <- GMP_all %>%
filter(Crime.type == "residence") %>%
group_by(WD18CD) %>%
rename(WD = WD18CD) %>%
summarise(GMP = sum(num))
# Count property crimes per WD
GMP_theft_ward <- GMP_all %>%
filter(Crime.type == "theft") %>%
group_by(WD18CD) %>%
rename(WD = WD18CD) %>%
summarise(GMP = sum(num))
# Count violent crimes per WD
GMP_violent_ward <- GMP_all %>%
filter(Crime.type == "violent") %>%
group_by(WD18CD) %>%
rename(WD = WD18CD) %>%
summarise(GMP = sum(num))
# Merge GMP data with simulated dataset by crime type and spatial scale.
crimes_OA_all <- left_join(crimes_OA_know, GMP_all_oa, by = "OA")
crimes_OA_vehicle <- left_join(vehicle_OA_know, GMP_vehicle_oa, by = "OA")
crimes_OA_residence <- left_join(residence_OA_know, GMP_residence_oa, by = "OA")
crimes_OA_theft <- left_join(theft_OA_know, GMP_theft_oa, by = "OA")
crimes_OA_violent <- left_join(violent_OA_know, GMP_violent_oa, by = "OA")
crimes_LSOA_all <- left_join(crimes_LSOA_know, GMP_all_lsoa, by = "LSOA")
crimes_LSOA_vehicle <- left_join(vehicle_LSOA_know, GMP_vehicle_lsoa, by = "LSOA")
crimes_LSOA_residence <- left_join(residence_LSOA_know, GMP_residence_lsoa, by = "LSOA")
crimes_LSOA_theft <- left_join(theft_LSOA_know, GMP_theft_lsoa, by = "LSOA")
crimes_LSOA_violent <- left_join(violent_LSOA_know, GMP_violent_lsoa, by = "LSOA")
crimes_MSOA_all <- left_join(crimes_MSOA_know, GMP_all_msoa, by = "MSOA")
crimes_MSOA_vehicle <- left_join(vehicle_MSOA_know, GMP_vehicle_msoa, by = "MSOA")
crimes_MSOA_residence <- left_join(residence_MSOA_know, GMP_residence_msoa, by = "MSOA")
crimes_MSOA_theft <- left_join(theft_MSOA_know, GMP_theft_msoa, by = "MSOA")
crimes_MSOA_violent <- left_join(violent_MSOA_know, GMP_violent_msoa, by = "MSOA")
crimes_WD_all <- left_join(crimes_WD_know, GMP_all_ward, by = "WD")
crimes_WD_vehicle <- left_join(vehicle_WD_know, GMP_vehicle_ward, by = "WD")
crimes_WD_residence <- left_join(residence_WD_know, GMP_residence_ward, by = "WD")
crimes_WD_theft <- left_join(theft_WD_know, GMP_theft_ward, by = "WD")
crimes_WD_violent <- left_join(violent_WD_know, GMP_violent_ward, by = "WD")
# Recode NAs as 0
crimes_OA_all[is.na(crimes_OA_all)] <- 0
crimes_OA_vehicle[is.na(crimes_OA_vehicle)] <- 0
crimes_OA_residence[is.na(crimes_OA_residence)] <- 0
crimes_OA_theft[is.na(crimes_OA_theft)] <- 0
crimes_OA_violent[is.na(crimes_OA_violent)] <- 0
crimes_LSOA_all[is.na(crimes_LSOA_all)] <- 0
crimes_LSOA_vehicle[is.na(crimes_LSOA_vehicle)] <- 0
crimes_LSOA_residence[is.na(crimes_LSOA_residence)] <- 0
crimes_LSOA_theft[is.na(crimes_LSOA_theft)] <- 0
crimes_LSOA_violent[is.na(crimes_LSOA_violent)] <- 0
crimes_MSOA_all[is.na(crimes_MSOA_all)] <- 0
crimes_MSOA_vehicle[is.na(crimes_MSOA_vehicle)] <- 0
crimes_MSOA_residence[is.na(crimes_MSOA_residence)] <- 0
crimes_MSOA_theft[is.na(crimes_MSOA_theft)] <- 0
crimes_MSOA_violent[is.na(crimes_MSOA_violent)] <- 0
crimes_WD_all[is.na(crimes_WD_all)] <- 0
crimes_WD_vehicle[is.na(crimes_WD_vehicle)] <- 0
crimes_WD_residence[is.na(crimes_WD_residence)] <- 0
crimes_WD_theft[is.na(crimes_WD_theft)] <- 0
crimes_WD_violent[is.na(crimes_WD_violent)] <- 0
# Spearman's rank correlations at the output area level.
cor.test(crimes_OA_all$known, crimes_OA_all$GMP, method = "spearman")
cor.test(crimes_OA_vehicle$known, crimes_OA_vehicle$GMP, method = "spearman")
cor.test(crimes_OA_residence$known, crimes_OA_residence$GMP, method = "spearman")
cor.test(crimes_OA_theft$known, crimes_OA_theft$GMP, method = "spearman")
cor.test(crimes_OA_violent$known, crimes_OA_violent$GMP, method = "spearman")
# Spearman's rank correlations at the LSOA level
cor.test(crimes_LSOA_all$known, crimes_LSOA_all$GMP, method = "spearman")
cor.test(crimes_LSOA_vehicle$known, crimes_LSOA_vehicle$GMP, method = "spearman")
cor.test(crimes_LSOA_residence$known, crimes_LSOA_residence$GMP, method = "spearman")
cor.test(crimes_LSOA_theft$known, crimes_LSOA_theft$GMP, method = "spearman")
cor.test(crimes_LSOA_violent$known, crimes_LSOA_violent$GMP, method = "spearman")
# Spearman's rank correlations at the MSOA level
cor.test(crimes_MSOA_all$known, crimes_MSOA_all$GMP, method = "spearman")
cor.test(crimes_MSOA_vehicle$known, crimes_MSOA_vehicle$GMP, method = "spearman")
cor.test(crimes_MSOA_residence$known, crimes_MSOA_residence$GMP, method = "spearman")
cor.test(crimes_MSOA_theft$known, crimes_MSOA_theft$GMP, method = "spearman")
cor.test(crimes_MSOA_violent$known, crimes_MSOA_violent$GMP, method = "spearman")
# Spearman's rank correlations at the ward level
cor.test(crimes_WD_all$known, crimes_WD_all$GMP, method = "spearman")
cor.test(crimes_WD_vehicle$known, crimes_WD_vehicle$GMP, method = "spearman")
cor.test(crimes_WD_residence$known, crimes_WD_residence$GMP, method = "spearman")
cor.test(crimes_WD_theft$known, crimes_WD_theft$GMP, method = "spearman")
cor.test(crimes_WD_violent$known, crimes_WD_violent$GMP, method = "spearman")
# Load proximity matrix of OAs in Manchester
lw_OA <- readRDS("data/lw_OA.RData")
if (exists("lw_OA")){
print("We have already created the proximity matrix of output areas in Manchester")
} else {
# Load Output Areas in shapefile
OAs <- st_read("D:/PhD Manchester/Data/Geographies/OAs Manchester 2 (shp)/england_oac_2011.shp")
# Select those output areas from Manchester LAD
OAs <- subset(OAs, code %in% crimes_OA_all$OA)
# Order areas by Output Area code
OAs <- OAs[order(OAs$code), ]
# Create proximity matrix at the output area level
Sy1_OAs <- poly2nb(OAs, row.names = OAs$codes)
card(Sy1_OAs)
lw_OA <- nb2listw(Sy1_OAs)
# Save proximity matrix
saveRDS(lw_OA, file="data/lw_OA.RData")
}
# Correlation betwen LISA from GMP and our dataset of simulated crimes
LISA_OA_all_GMP <- localmoran(crimes_OA_all$GMP, lw_OA)
LISA_OA_all_sim <- localmoran(crimes_OA_all$known, lw_OA)
cor.test(LISA_OA_all_GMP, LISA_OA_all_sim, method = "spearman")
