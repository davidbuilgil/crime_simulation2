library(sf)
# Load in spatial polygons at LSOA and MSOA level
msoa_sf <- st_read("data/shapefiles/msoa_manc_sf.shp")
lsoa_sf <- st_read("data/shapefiles/lsoa_manc_sf.shp")
# Merge shapefile
lsoa_sf <- lsoa_sf %>%
left_join(lsoa_all, by = c("code" = "LSOA"))
class(lsoa_sf)
#convert map into sp object
lsoa_sf <- as_Spatial(lsoa_sf)
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSOAs
syn_lsoa_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(LSOA) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Read in census look-up table(LSOA, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
library(readr)
library(sf)
library(ggplot2)
library(sp)
library(spdep)
library(tmap)
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
library(here)
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSOAs
syn_lsoa_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(LSOA) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Read in census look-up table(LSOA, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
library(dplyr)
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSOAs
syn_lsoa_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(LSOA) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Read in census look-up table(LSOA, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
# Rename LSOA column and filter for Manchester.
LSOA_to_ward <- LSOA_to_ward %>%
rename(LSOA = LSOA11CD) %>%
filter(LAD18NM == "Manchester")
# Load crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
# Merge spatial information of wards.
GMP_manc <- GMP_all %>%
left_join(LSOA_to_ward, by = c("lsoa11cd" = "LSOA")) %>%
filter(ladnm == "Manchester")
# Recode crime types to match categories used thus far.
GMP_manc <- GMP_manc %>%
mutate(Crime.type = recode(Crime.type,
"Anti-social behaviour"       = "other",
"Burglary"                    = "residence",
"Criminal damage and arson"   = "residence",
"Drugs"                       = "other",
"Other crime"                 = "other",
"Other theft"                 = "theft",
"Public disorder and weapons" = "other",
"Robbery"                     = "theft",
"Shoplifting"                 = "other",
"Vehicle crime"               = "vehicle",
"Violent crime"               = "violent")) %>%
filter(Crime.type == "residence" | Crime.type == "theft" | Crime.type == "vehicle" | Crime.type == "violent")
# Aggregate GMP data in LSOAs
GMP_lsoa_pol <- GMP_manc %>%
group_by(lsoa11cd) %>%
summarise(total.p     = n(),
vehicle.p   = sum(num[Crime.type == "vehicle"]),
residence.p = sum(num[Crime.type == "residence"]),
violence.p  = sum(num[Crime.type == "violent"]),
theft.p     = sum(num[Crime.type == "theft"])) %>%
rename(LSOA = 1)
# Aggregate synthetic and police data
lsoa_all <- left_join(syn_lsoa_pol, GMP_lsoa_pol, by = "LSOA")
# Load in spatial polygons at LSOA and MSOA level
msoa_sf <- st_read("data/shapefiles/msoa_manc_sf.shp")
lsoa_sf <- st_read("data/shapefiles/lsoa_manc_sf.shp")
# Merge shapefile
lsoa_sf <- lsoa_sf %>%
left_join(lsoa_all, by = c("code" = "LSOA"))
View(lsoa_sf)
class(lsoa_sf)
#convert map into sp object
lsoa_sf <- as_Spatial(lsoa_sf)
lsoa_sf <- st_read("data/shapefiles/lsoa_manc_sf.shp")
# Merge shapefile
lsoa_sf <- lsoa_sf %>%
left_join(lsoa_all, by = c("code" = "LSOA"))
#save lad code as character
lsoa_sf$code <- as.character(lsoa_sf$code)
#identify neighbours in map
w <- poly2nb(lsoa_sf, row.names = lsoa_sf$code)
View(w)
lsoa_sf <- st_read("data/shapefiles/oa_manc_sf.shp")
#identify neighbours in map
w <- poly2nb(lsoa_sf, row.names = lsoa_sf$code)
View(w)
View(syn_pol)
rm(list=ls())
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSOAs
syn_oa_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(OA) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Load crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
View(GMP_all)
# Read in census look-up table(LSOA, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
# Rename LSOA column and filter for Manchester.
LSOA_to_ward <- LSOA_to_ward %>%
rename(LSOA = LSOA11CD) %>%
filter(LAD18NM == "Manchester")
# Load crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
# Merge spatial information of wards.
GMP_manc <- GMP_all %>%
left_join(LSOA_to_ward, by = c("lsoa11cd" = "LSOA")) %>%
filter(ladnm == "Manchester")
# Recode crime types to match categories used thus far.
GMP_manc <- GMP_manc %>%
mutate(Crime.type = recode(Crime.type,
"Anti-social behaviour"       = "other",
"Burglary"                    = "residence",
"Criminal damage and arson"   = "residence",
"Drugs"                       = "other",
"Other crime"                 = "other",
"Other theft"                 = "theft",
"Public disorder and weapons" = "other",
"Robbery"                     = "theft",
"Shoplifting"                 = "other",
"Vehicle crime"               = "vehicle",
"Violent crime"               = "violent")) %>%
filter(Crime.type == "residence" | Crime.type == "theft" | Crime.type == "vehicle" | Crime.type == "violent")
# Aggregate GMP data in LSOAs
GMP_oa_pol <- GMP_manc %>%
group_by(oa11) %>%
summarise(total.p     = n(),
vehicle.p   = sum(num[Crime.type == "vehicle"]),
residence.p = sum(num[Crime.type == "residence"]),
violence.p  = sum(num[Crime.type == "violent"]),
theft.p     = sum(num[Crime.type == "theft"])) %>%
rename(OA = 1)
View(GMP_oa_pol)
# Aggregate synthetic and police data
oa_all <- left_join(syn_oa_pol, GMP_oa_pol, by = "OA")
View(oa_all)
# Load in spatial polygons at LSOA and MSOA level
oa_sf <- st_read("data/shapefiles/oa_manc_sf.shp")
# Merge shapefile
oa_sf <- oa_sf %>%
left_join(oa_all, by = c("code" = "OA"))
View(oa_sf)
#save lad code as character
oa_sf$code <- as.character(oa_sf$code)
#identify neighbours in map
w <- poly2nb(oa_sf, row.names = oa_sf$code)
View(w)
#create spatial weights matrix
ww <-  nb2listw(w, style = 'W', zero.policy = TRUE)
#calculate Moran's I
moran(oa_sf$violence.s, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
moran.mc(oa_sf$violence.s, ww, nsim = 99, zero.policy = TRUE)
moran(oa_sf$violence.p, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
# Load in spatial polygons at LSOA and MSOA level
oa_sf <- st_read("data/shapefiles/oa_manc_sf.shp")
# Merge shapefile
oa_sf <- oa_sf %>%
left_join(oa_all, by = c("code" = "OA")) %>%
replace(is.na(.), 0)
View(oa_sf)
#save lad code as character
oa_sf$code <- as.character(oa_sf$code)
#identify neighbours in map
w <- poly2nb(oa_sf, row.names = oa_sf$code)
#create spatial weights matrix
ww <-  nb2listw(w, style = 'W', zero.policy = TRUE)
#calculate Moran's I
moran(oa_sf$violence.s, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
moran.mc(oa_sf$violence.s, ww, nsim = 99, zero.policy = TRUE)
moran(oa_sf$violence.p, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
moran.mc(oa_sf$violence.p, ww, nsim = 99, zero.policy = TRUE)
#calculate local Moran
locm_bm.s <- localmoran(oa_sf$violence.s, ww, zero.policy = TRUE)
summary(locm_bm.s)
locm_bm.p <- localmoran(oa_sf$violence.p, ww, zero.policy = TRUE)
summary(locm_bm.p)
#scale variables of interest
oa_sf$s_violence.s <- scale(oa_sf$violence.s) %>% as.vector()
oa_sf$s_violence.p <- scale(oa_sf$violence.p) %>% as.vector()
#create a spatial lag variable
oa_sf$lag_s_violence.s <- lag.listw(ww, oa_sf$s_violence.s, zero.policy = TRUE)
oa_sf$lag_s_violence.p <- lag.listw(ww, oa_sf$s_violence.p, zero.policy = TRUE)
#check new variables
summary(oa_sf$s_violence.s)
summary(oa_sf$s_violence.p)
summary(oa_sf$lag_s_violence.s)
summary(oa_sf$lag_s_violence.p)
#create groups according to p-values
oa_sf.s <- st_as_sf(oa_sf) %>%
mutate(quad_sig = ifelse(oa_sf$s_violence.s > 0 &
oa_sf$lag_s_violence.s > 0 &
locm_bm.s[,5] <= 0.05,
"high-high",
ifelse(oa_sf$s_violence.s <= 0 &
oa_sf$lag_s_violence.s <= 0 &
locm_bm.s[,5] <= 0.05,
"low-low",
ifelse(oa_sf$s_violence.s > 0 &
oa_sf$lag_s_violence.s <= 0 &
locm_bm.s[,5] <= 0.05,
"high-low",
ifelse(oa_sf$s_violence.s <= 0 &
oa_sf$lag_s_violence.s > 0 &
locm_bm.s[,5] <= 0.05,
"low-high",
"non-significant")))))
oa_sf.p <- st_as_sf(oa_sf) %>%
mutate(quad_sig = ifelse(oa_sf$s_violence.p > 0 &
oa_sf$lag_s_violence.p > 0 &
locm_bm.p[,5] <= 0.05,
"high-high",
ifelse(oa_sf$s_violence.p <= 0 &
oa_sf$lag_s_violence.p <= 0 &
locm_bm.p[,5] <= 0.05,
"low-low",
ifelse(oa_sf$s_violence.p > 0 &
oa_sf$lag_s_violence.p <= 0 &
locm_bm.p[,5] <= 0.05,
"high-low",
ifelse(oa_sf$s_violence.p <= 0 &
oa_sf$lag_s_violence.p > 0 &
locm_bm.p[,5] <= 0.05,
"low-high",
"non-significant")))))
#check results
table(oa_sf.s$quad_sig)
table(oa_sf.p$quad_sig)
library(tmap)
#map results
s <- tm_shape(oa_sf.s) +
tm_borders("grey51", alpha = 0) +
tm_polygons("quad_sig", title = "LISA Survey data",
palette = c('high-high' = '#CC6677', 'non-significant' = '#6699CC',
'low-low' = '#999933', 'Missing' = '#888888')) +
tm_layout(frame = FALSE)
p <- tm_shape(oa_sf.p) +
tm_borders("grey51", alpha = 0) +
tm_polygons("quad_sig", title = "LISA Police data",
palette = c('high-high' = '#CC6677', 'non-significant' = '#6699CC',
'low-low' = '#999933', 'Missing' = '#888888')) +
tm_layout(frame = FALSE)
# plot three maps
tmap_arrange(s, p, nrow = 1)
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
rm(list=ls())
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSwds
syn_wd_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(wd) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Read in census look-up table(LSwd, Ward). Warnings not an issue.
LSwd_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
# Rename LSwd column and filter for Manchester.
LSwd_to_ward <- LSwd_to_ward %>%
rename(LSwd = LSwd11CD) %>%
filter(LAD18NM == "Manchester")
View(LSwd_to_ward)
# Rename LSwd column and filter for Manchester.
LSwd_to_ward <- LSwd_to_ward %>%
filter(LAD18NM == "Manchester")
# Lwdd crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSwds
syn_wd_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(WD) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
View(syn_wd_pol)
# Read in census look-up table(LSwd, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
# Rename LSwd column and filter for Manchester.
LSOA_to_ward <- LSOA_to_ward %>%
rename(LSOA = LSOA11CD) %>%
filter(LAD18NM == "Manchester")
# Lwdd crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
# Merge spatial information of wards.
GMP_manc <- GMP_all %>%
left_join(LSwd_to_ward, by = c("lsoa11cd" = "LSOA")) %>%
filter(ladnm == "Manchester")
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Read synthetic police data
syn_pol <- read_csv(here("data", "Data_crimes.csv"))
# Aggregate synthetic police data in LSOAs
syn_oa_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(WD) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
# Read in census look-up table(LSOA, Ward). Warnings not an issue.
LSOA_to_ward <- read_csv(here("data", "Lower_Layer_Super_Output_Area_2011_to_Ward_2018_Lookup_in_England_and_Wales_v3.csv"))
# Rename LSOA column and filter for Manchester.
LSOA_to_ward <- LSOA_to_ward %>%
rename(LSOA = LSOA11CD) %>%
filter(LAD18NM == "Manchester")
# Load crimes known to Greater Manchester Police in 2011/12.
GMP_all <- read_csv(here("data/GMP_all.csv"))
# Merge spatial information of wards.
GMP_manc <- GMP_all %>%
left_join(LSOA_to_ward, by = c("lsoa11cd" = "LSOA")) %>%
filter(ladnm == "Manchester")
# Recode crime types to match categories used thus far.
GMP_manc <- GMP_manc %>%
mutate(Crime.type = recode(Crime.type,
"Anti-social behaviour"       = "other",
"Burglary"                    = "residence",
"Criminal damage and arson"   = "residence",
"Drugs"                       = "other",
"Other crime"                 = "other",
"Other theft"                 = "theft",
"Public disorder and weapons" = "other",
"Robbery"                     = "theft",
"Shoplifting"                 = "other",
"Vehicle crime"               = "vehicle",
"Violent crime"               = "violent")) %>%
filter(Crime.type == "residence" | Crime.type == "theft" | Crime.type == "vehicle" | Crime.type == "violent")
# Aggregate synthetic police data in LSOAs
syn_wd_pol <- syn_pol %>%
filter(copsknow == 1) %>%
group_by(WD) %>%
summarise(total.s     = n(),
vehicle.s   = sum(vehicle),
residence.s = sum(residence),
violence.s  = sum(violence),
theft.s     = sum(theft))
View(GMP_manc)
# Aggregate GMP data in LSOAs
GMP_oa_pol <- GMP_manc %>%
group_by(WD18CD) %>%
summarise(total.p     = n(),
vehicle.p   = sum(num[Crime.type == "vehicle"]),
residence.p = sum(num[Crime.type == "residence"]),
violence.p  = sum(num[Crime.type == "violent"]),
theft.p     = sum(num[Crime.type == "theft"])) %>%
rename(WD = 1)
# Aggregate synthetic and police data
wd_all <- left_join(syn_wd_pol, GMP_wd_pol, by = "WD")
# Aggregate GMP data in LSOAs
GMP_wd_pol <- GMP_manc %>%
group_by(WD18CD) %>%
summarise(total.p     = n(),
vehicle.p   = sum(num[Crime.type == "vehicle"]),
residence.p = sum(num[Crime.type == "residence"]),
violence.p  = sum(num[Crime.type == "violent"]),
theft.p     = sum(num[Crime.type == "theft"])) %>%
rename(WD = 1)
# Aggregate synthetic and police data
wd_all <- left_join(syn_wd_pol, GMP_wd_pol, by = "WD")
# Load in spatial polygons at LSOA and MSOA level
wd_sf <- st_read("data/shapefiles/wd_manc_sf.shp")
# Load in spatial polygons at LSOA and MSOA level
wd_sf <- st_read("data/shapefiles/ward_manc_sf.shp")
# Load in spatial polygons at LSOA and MSOA level
wd_sf <- st_read("data/shapefiles/ward_manc_sf.shp")
# Merge shapefile
wd_sf <- wd_sf %>%
left_join(wd_all, by = c("code" = "wd")) %>%
replace(is.na(.), 0)
View(wd_sf)
View(wd_all)
# Merge shapefile
wd_sf <- wd_sf %>%
left_join(wd_all, by = c("wd18cd" = "WD")) %>%
replace(is.na(.), 0)
#save lad code as character
wd_sf$code <- as.character(wd_sf$code)
View(wd_sf)
#save lad code as character
wd_sf$wd18cd <- as.character(wd_sf$wd18cd)
#identify neighbours in map
w <- poly2nb(wd_sf, row.names = wd_sf$wd18cd)
View(w)
#create spatial weights matrix
ww <-  nb2listw(w, style = 'W', zero.policy = TRUE)
#calculate Moran's I
moran(wd_sf$violence.s, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
moran.mc(wd_sf$violence.s, ww, nsim = 99, zero.policy = TRUE)
moran(wd_sf$violence.p, ww, n = length(ww$neighbours), S0 = Szero(ww),
zero.policy = TRUE)
moran.mc(wd_sf$violence.p, ww, nsim = 99, zero.policy = TRUE)
#calculate local Moran
locm_bm.s <- localmoran(wd_sf$violence.s, ww, zero.policy = TRUE)
summary(locm_bm.s)
locm_bm.p <- localmoran(wd_sf$violence.p, ww, zero.policy = TRUE)
summary(locm_bm.p)
#scale variables of interest
wd_sf$s_violence.s <- scale(wd_sf$violence.s) %>% as.vector()
wd_sf$s_violence.p <- scale(wd_sf$violence.p) %>% as.vector()
#create a spatial lag variable
wd_sf$lag_s_violence.s <- lag.listw(ww, wd_sf$s_violence.s, zero.policy = TRUE)
wd_sf$lag_s_violence.p <- lag.listw(ww, wd_sf$s_violence.p, zero.policy = TRUE)
#check new variables
summary(wd_sf$s_violence.s)
summary(wd_sf$s_violence.p)
summary(wd_sf$lag_s_violence.s)
summary(wd_sf$lag_s_violence.p)
#create groups according to p-values
wd_sf.s <- st_as_sf(wd_sf) %>%
mutate(quad_sig = ifelse(wd_sf$s_violence.s > 0 &
wd_sf$lag_s_violence.s > 0 &
locm_bm.s[,5] <= 0.05,
"high-high",
ifelse(wd_sf$s_violence.s <= 0 &
wd_sf$lag_s_violence.s <= 0 &
locm_bm.s[,5] <= 0.05,
"low-low",
ifelse(wd_sf$s_violence.s > 0 &
wd_sf$lag_s_violence.s <= 0 &
locm_bm.s[,5] <= 0.05,
"high-low",
ifelse(wd_sf$s_violence.s <= 0 &
wd_sf$lag_s_violence.s > 0 &
locm_bm.s[,5] <= 0.05,
"low-high",
"non-significant")))))
wd_sf.p <- st_as_sf(wd_sf) %>%
mutate(quad_sig = ifelse(wd_sf$s_violence.p > 0 &
wd_sf$lag_s_violence.p > 0 &
locm_bm.p[,5] <= 0.05,
"high-high",
ifelse(wd_sf$s_violence.p <= 0 &
wd_sf$lag_s_violence.p <= 0 &
locm_bm.p[,5] <= 0.05,
"low-low",
ifelse(wd_sf$s_violence.p > 0 &
wd_sf$lag_s_violence.p <= 0 &
locm_bm.p[,5] <= 0.05,
"high-low",
ifelse(wd_sf$s_violence.p <= 0 &
wd_sf$lag_s_violence.p > 0 &
locm_bm.p[,5] <= 0.05,
"low-high",
"non-significant")))))
#check results
table(wd_sf.s$quad_sig)
table(wd_sf.p$quad_sig)
library(tmap)
#map results
s <- tm_shape(wd_sf.s) +
tm_borders("grey51", alpha = 0) +
tm_polygons("quad_sig", title = "LISA Survey data",
palette = c('high-high' = '#CC6677', 'non-significant' = '#6699CC',
'low-low' = '#999933', 'Missing' = '#888888')) +
tm_layout(frame = FALSE)
p <- tm_shape(wd_sf.p) +
tm_borders("grey51", alpha = 0) +
tm_polygons("quad_sig", title = "LISA Police data",
palette = c('high-high' = '#CC6677', 'non-significant' = '#6699CC',
'low-low' = '#999933', 'Missing' = '#888888')) +
tm_layout(frame = FALSE)
# plot three maps
tmap_arrange(s, p, nrow = 1)
